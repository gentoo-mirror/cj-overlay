# Copyright 1999-2012 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id: $

DESCRIPTION="Manages timezone selection"
MAINTAINER="ottxor@gentoo.org"
VERSION="0.1"

ZONE_DIR="${EROOT}/usr/share/zoneinfo"
## Functions ##

# find a list of zones in ZONE_DIR
find_targets() {
	local t
	for t in $(find "${ZONE_DIR}" -type f | sort ) ; do
		[[ $(file ${t}) = *"timezone data"* ]] && echo ${t#${ZONE_DIR}/}
	done
}

### show action ###

describe_show() {
	echo "Show the current timezone selection"
}

do_show() {
	[[ -z ${@} ]] || die -q "Too many parameters"
	
	local zone

	[[ -f ${EROOT}/etc/timezone ]] && \
		zone=$(grep -e "^[^#]" "${EROOT}"/etc/timezone)

	write_list_start "Current timezone selection:"
	if [[ -z ${zone} ]]; then
		write_kv_list_entry "(unset in ${EROOT}/etc/timezone)" ""
	elif [[ ! -f ${ZONE_DIR}/${zone} ]]; then
		write_kv_list_entry "(invalid zone in ${EROOT}/etc/localtime)" ""
	elif [[ -f ${EROOT}/etc/localtime ]]; then
		cmp -s "${ZONE_DIR}/${zone}" "${EROOT}/etc/localtime" || \
			die -q "Zone in ${EROOT}/etc/localtime and ${EROOT}/etc/timezone differ"
		write_kv_list_entry "${zone}" ""
	else
		write_kv_list_entry "(set to ${zone}, but unset in ${EROOT}/etc/localtime)" ""
	fi
}

### list action ###

describe_list() {
	echo "List available timezones"
}

do_list() {
	[[ -z ${@} ]] || die -q "Too many parameters"

	local i targets

	local zone

	zone=$(grep -e "^[^#]" "${EROOT}"/etc/timezone)
	
	targets=( $(find_targets) )
	for (( i = 0; i < ${#targets[@]}; i++ )) ; do
		[[ ${targets[${i}]} == ${zone} ]] && \
			targets[${i}]=$(highlight_marker "${targets[${i}]}")
	done
	write_list_start "Available timezones:"
	write_numbered_list -m '(none found)' "${targets[@]}"
}

### set action ###

describe_set() {
	echo "Set a new timezone"
}

describe_set_options() {
	echo "target : Target name or number (from 'list' action)"
}

describe_set_parameters() {
	echo "<target>"
}

do_set() {
	if [[ -z ${1} ]]; then
		die -q "Not enough parameters"
	elif [[ -n ${2} ]]; then
		die -q "Too many parameters"
	fi

	local target=${1} targets

	if is_number "${target}" && [[ ${target} -ge 1 ]]; then
		targets=( $(find_targets) )
		target=${targets[target-1]}
	fi
	
	[[ -f ${ZONE_DIR}/${target} ]] || die -q "Target '${target}' doesn't appear to be valid!"

	#if localtime is a symlink cp would fail
	rm -f "${EROOT}/etc/localtime" || die -q "Couldn't remove ${EROOT}/etc/localtime"
	cp "${ZONE_DIR}/${target}" "${EROOT}"/etc/localtime || \
		die -q "Couldn't copy ${target} to ${EROOT}/etc/localtime"
	echo "${target}" > "${EROOT}"/etc/timezone || \
		die -q "Couldn't save ${target} in ${EROOT}/etc/timezone"
}

# vim: set syn=sh :
